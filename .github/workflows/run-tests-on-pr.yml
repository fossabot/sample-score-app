name: run-tests-on-pr
permissions:
  contents: read
  id-token: write
on:
  pull_request:
env:
  SCORE_COMPOSE_VERSION: 'latest'
  SCORE_K8S_VERSION: 'latest'
  WORKLOAD_NAME: hello-world
jobs:
  job:
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v4
      - name: install score-compose
        uses: score-spec/setup-score@v3
        with:
          file: score-compose
          token: ${{ secrets.GITHUB_TOKEN }}
          version: ${{ env.SCORE_COMPOSE_VERSION }}
      - name: make compose-test
        run: |
          make compose-test
      - name: create kind cluster
        run: |
          kind create cluster
          kubectl apply \
              -f https://github.com/kubernetes-sigs/gateway-api/releases/download/v1.0.0/standard-install.yaml
          helm install ngf oci://ghcr.io/nginxinc/charts/nginx-gateway-fabric \
              --create-namespace \
              -n nginx-gateway \
              --set service.type=ClusterIP
          kubectl apply -f - <<EOF
          apiVersion: gateway.networking.k8s.io/v1
          kind: Gateway
          metadata:
            name: default
          spec:
            gatewayClassName: nginx
            listeners:
            - name: http
              port: 80
              protocol: HTTP
          EOF
          make kind-load-image
      - name: install score-k8s
        uses: score-spec/setup-score@v3
        with:
          file: score-k8s
          token: ${{ secrets.GITHUB_TOKEN }}
          version: ${{ env.SCORE_K8S_VERSION }}
      - name: make k8s-up
        id: k8s-up
        run: |
          make k8s-up
      - name: catch k8s-up errors
        if: ${{ failure() && steps.k8s-up.outcome == 'failure' }}
        run: |
          kubectl get events
          kubectl logs \
              -l app.kubernetes.io/name=${{ env.WORKLOAD_NAME }}
